{"version":3,"sources":["Redux/Actions/animeAction.js","Redux/Reducers/animeReducer.js","Redux/store.js","components/headerComponent/header.js","components/animeListComponent/animeList.js","components/animeContainerComponent/loader.gif","components/animeContainerComponent/animeContainer.js","App.js","reportWebVitals.js","index.js"],"names":["FETCH_ANIME_REQUEST","FETCH_ANIME_SUCCESS","FETCH_ANIME_FAILURE","PAGE_RESET","SEARCH_TEXT","fetchAnimeRequest","type","fetchAnimeSuccess","data","payload","fetchAnimeError","error","fetchAnimeData","page","query","console","log","dispatch","axios","get","then","response","animeData","results","catch","errorMsg","message","initialState","isLoading","searchText","undefined","animeReducer","state","action","store","createStore","reducer","applyMiddleware","thunk","subscribe","getState","Header","props","useState","setSearchText","useDispatch","search","event","preventDefault","searchValue","alert","className","onSubmit","value","onChange","target","onClick","React","memo","AnimeList","animeDataList","animeList","length","map","Row","Col","src","image_url","alt","title","mal_id","Container","AnimeContainer","componentDidMount","loadMoreHandler","this","class","loader","PureComponent","connect","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.66620744.chunk.js","sourcesContent":["import axios from 'axios';\n\nexport const FETCH_ANIME_REQUEST = 'FETCH_ANIME_REQUEST';\nexport const FETCH_ANIME_SUCCESS = 'FETCH_ANIME_SUCCESS';\nexport const FETCH_ANIME_FAILURE = 'FETCH_ANIME_FAILURE ';\nexport const PAGE_RESET = 'PAGE_RESET';\nexport const SEARCH_TEXT = 'SEARCH_TEXT'\nexport const fetchAnimeRequest = () => {\n    return {\n        type:FETCH_ANIME_REQUEST\n    }\n}\n\nexport const fetchAnimeSuccess = data => {\n    return {\n        type: FETCH_ANIME_SUCCESS,\n        payload: data\n    }\n}\n\nexport const fetchAnimeError = error => {\n    return {\n        type: FETCH_ANIME_FAILURE,\n        payload: error\n    }\n}\n\nexport const pageReset = () => {\n    return{\n        type: PAGE_RESET,\n    }\n}\n\nexport const searchValue = (searchText) => {\n    return{\n        type: SEARCH_TEXT,\n        payload: searchText\n    }\n}\n\nexport const fetchAnimeData = (page = 15, query ) => {\n  console.log(\"fetchAnimeData -> query\", query)\n  console.log(\"fetchAnimeData -> limit\", page)\n    return (dispatch) => {\n       dispatch(fetchAnimeRequest());\n        axios.get(`https://api.jikan.moe/v3/search/anime?q=${query}&limit=${page}`)\n            .then(response => {\n                const animeData = response.data.results;\n                dispatch(fetchAnimeSuccess(animeData))\n            })\n            .catch(error => {\n                const errorMsg = error.message;\n                dispatch(fetchAnimeError(errorMsg));\n            })\n    }\n    \n}","import { FETCH_ANIME_REQUEST,FETCH_ANIME_SUCCESS,FETCH_ANIME_FAILURE,PAGE_RESET,SEARCH_TEXT} from  '../Actions/animeAction';\n\nconst initialState = {\n    animeData:[],\n    isLoading: false,\n    page:15,\n    searchText: undefined,\n    error:''\n}\n\nconst animeReducer = (state = initialState, action) => {\n    switch(action.type){\n        case FETCH_ANIME_REQUEST : return {\n            ...state,\n            isLoading: true\n        }\n        case FETCH_ANIME_SUCCESS : return {\n            ...state,\n            isLoading: false,\n            animeData: action.payload,\n            page:state.page+16,\n            error: ''\n        }\n        case PAGE_RESET : return {\n            ...state,\n            animeData:[],\n            page:16\n        }\n        case SEARCH_TEXT : return {\n            ...state,\n            searchText: action.payload\n\n        }\n        case FETCH_ANIME_FAILURE : return {\n            ...state,\n            isLoading: false,\n            animeData: [],\n            error: action.payload\n        }\n        default : return state;\n    }\n}\n\nexport default animeReducer;","import {createStore, applyMiddleware} from 'redux';\nimport thunk from 'redux-thunk';\nimport reducer from './Reducers/animeReducer';\n\nconst store = createStore(reducer, applyMiddleware(thunk));\n\nstore.subscribe( () => console.log(\"subscribe  : \", store.getState()));\n\nexport default store;","import React, {useState} from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { fetchAnimeData,pageReset,searchValue } from '../../Redux';\nimport './header.css';\n\nconst Header = (props) => {\n    const [searchText, setSearchText] = useState('');\n    const dispatch = useDispatch();\n\n    const onChangeHandler = (event) => {\n        setSearchText(event.target.value);\n        }\n\n\n        //this will dispatch action to search new data\n    const search =(event) => {\n        event.preventDefault();\n        if(searchText === ''){\n            alert(\"Please enter the search string\");\n            return;\n        }\n        dispatch(pageReset());  //this will reset page on every new search\n        dispatch(searchValue(searchText)); \n        dispatch(fetchAnimeData(15,searchText));\n    }\n\n    return (\n        <div className='header-container'>\n        <header className=\"header\">\n            <form onSubmit={search}>\n                 <input type='text' value={searchText} onChange={onChangeHandler} />\n                 <button className='button-container' onClick={search} >Go</button>\n            </form>\n        </header>\n         <p className='url-text'>Requesting: {`https://api.jikan.moe/v3/search/anime?q=${searchText}`}</p>\n         </div>\n    )\n}\n\nexport default React.memo(Header);","import React from 'react'\nimport { Container, Row, Col } from 'reactstrap';\nimport './animeList.css'\nconst AnimeList = (props) => {\n    const {animeDataList} = props;\n\n    const animeList = animeDataList.length ? animeDataList.map(data => {\n            return (\n                    <Row>\n                        <Col className='anime-card' key={data.mal_id}>\n                            <img className='anime-image' src={data.image_url} alt='img'/>\n                            <div className='anime-name'>{data.title}</div>\n                        </Col>\n                    </Row> \n            )\n         })\n         : \n            <h1>No Data Found...</h1>\n\n    return (\n        <>\n            <Container className='container-list'>\n                {animeList}\n            </Container>\n        </>\n    )\n}\n\n\nexport default AnimeList;","export default __webpack_public_path__ + \"static/media/loader.01b22d1d.gif\";","import React, { PureComponent } from 'react'\nimport  './AnimeContainer.css';\nimport Header from '../headerComponent/header';\nimport { fetchAnimeData } from '../../Redux';\nimport { connect } from 'react-redux';\nimport AnimeList from '../animeListComponent/animeList';\nimport './AnimeContainer.css';\nimport loader from './loader.gif'\n\nclass AnimeContainer extends PureComponent {\n\n\n    //this will initialy load the data on first render\n    componentDidMount = () => {\n        this.props.fetchAnimeData();\n    }\n\n    //this will load more data on load more button click\n    loadMoreHandler = () => {\n        let {searchText, page} = this.props;\n        this.props.fetchAnimeData(page, searchText);  \n    }\n\n    render() {\n        const { animeDataList, isLoading } = this.props; \n    \n        return (\n            \n            <div className = \"container\">\n                <div className=\"sub-container\">\n                <Header />\n\n            { isLoading ? \n               <img class='img-container' src ={loader}  alt='loading' />\n                : \n                <>\n                <AnimeList  animeDataList = {animeDataList}/>\n                <button className='load-button' onClick={this.loadMoreHandler}>Load more...</button>\n                </>\n            }\n            </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return{\n        animeDataList : state.animeData,\n        isLoading : state.isLoading,\n        page : state.page,\n        searchText:state.searchText\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n   return {\n        fetchAnimeData : (page,query) => dispatch(fetchAnimeData(page,query)) \n    }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(AnimeContainer);","import './App.css';\nimport {Provider} from 'react-redux';\nimport store from './Redux/store';\nimport AnimeContainer from './components/animeContainerComponent/animeContainer';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Provider store={store}>\n        <AnimeContainer /> {/* main  container component for app  */}\n      </Provider>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}